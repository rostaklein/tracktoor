// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int         @id @default(autoincrement())
  username           String      @unique
  name               String?
  password           String
  active             Boolean     @default(true)
  createdCustomers   Customer[]
  createdCommodities Commodity[]
  createdOrders      Order[]
  createdBatches     Batch[]
}

model Customer {
  id                 Int      @id @default(autoincrement())
  personalIdentifier String   @unique
  name               String
  fbProfileUrl       String?
  note               String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  orders             Order[]
  createdBy          User     @relation(fields: [userId], references: [id])
  userId             Int
}

model Commodity {
  id          Int      @id @default(autoincrement())
  name        String
  photoUrl    String?
  price       Int
  description String?
  note        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
  createdBy   User     @relation(fields: [userId], references: [id])
  userId      Int
}

model Order {
  id         Int         @id @default(autoincrement())
  customer   Customer    @relation(fields: [customerId], references: [id])
  items      Commodity[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  customerId Int
  batch      Batch       @relation(fields: [batchId], references: [id])
  batchId    Int
  paid       Boolean
  extraCost  Int
  note       String?
  createdBy  User        @relation(fields: [userId], references: [id])
  userId     Int
}

model Batch {
  id         Int     @id @default(autoincrement())
  identifier String  @unique
  name       String?
  Order      Order[]
  note       String?
  createdBy  User    @relation(fields: [userId], references: [id])
  userId     Int
}
